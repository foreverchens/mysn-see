<?xml version="1.0" encoding="UTF-8" ?>
<configuration>


    <springProperty scope="context" name="appName" source="spring.application.name" />
    <springProperty scope="context" name="level" source="logback.level" />
<!--    <springProperty scope="context" name="KAFKA_SERVER" source="logback.deploy.kafka" defaultValue="kafka-1.huobidev.com:9092"/>-->

    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d [%t] %-5p [%X{X-B3-TraceId},%X{X-B3-SpanId},%X{X-B3-ParentSpanId}] %C.%M\(%L\) -%m%n</pattern>
        </encoder>
    </appender>

    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>./log/${appName}.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>./log/${appName}-%d{yyyyMMdd}.%i.log</FileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>

        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>%d [%t] %-5p [%X{X-B3-TraceId},%X{X-B3-SpanId},%X{X-B3-ParentSpanId}] %C.%M\(%L\) -%m%n</Pattern>
        </layout>
    </appender>

<!--    <appender name="kafkaAppender" class="com.github.danielwegener.logback.kafka.KafkaAppender">-->
<!--        &lt;!&ndash; This is the default encoder that encodes every log message to an utf8-encoded string  &ndash;&gt;-->
<!--        <encoder class="com.github.danielwegener.logback.kafka.encoding.PatternLayoutKafkaMessageEncoder">-->
<!--            &lt;!&ndash; About how to config LogstashLayout, please read https://github.com/logstash/logstash-logback-encoder/blob/master/README.md &ndash;&gt;-->
<!--            <layout class="net.logstash.logback.layout.LogstashLayout">-->
<!--                <customFields>-->
<!--                    {"app":"${appName}","profile":"${ENV_NAME}","app_name":"${appName}","env_name":"${ENV_NAME}","build_name":"1","build_git_version":"1","build_git_hash":"1","build_timestamp":"1"}-->
<!--                </customFields>-->
<!--            </layout>-->
<!--        </encoder>-->

<!--        <topic>applog-hbp</topic>-->
<!--        <keyingStrategy class="com.github.danielwegener.logback.kafka.keying.RoundRobinKeyingStrategy" />-->
<!--        <deliveryStrategy class="com.github.danielwegener.logback.kafka.delivery.AsynchronousDeliveryStrategy" />-->

<!--        &lt;!&ndash; each <producerConfig> translates to regular kafka-client config (format: key=value) &ndash;&gt;-->
<!--        &lt;!&ndash; producer configs are documented here: https://kafka.apache.org/documentation.html#newproducerconfigs &ndash;&gt;-->
<!--        &lt;!&ndash; bootstrap.servers is the only mandatory producerConfig &ndash;&gt;-->
<!--        <producerConfig>bootstrap.servers=${KAFKA_SERVER}</producerConfig>-->

<!--        &lt;!&ndash; this is the fallback appender if kafka is not available. &ndash;&gt;-->
<!--        <appender-ref ref="FILE"/>-->
<!--    </appender>-->
    <logger name="com.kline.ychen" level="${level}" >
        <!--        <appender-ref ref="kafkaAppender"/>-->
    </logger>
    <root level="info">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
    </root>
</configuration>
